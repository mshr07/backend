{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;// Check for saved theme preference or default to light mode\nconst[theme,setTheme]=useState(()=>{const savedTheme=localStorage.getItem('expense-tracker-theme');if(savedTheme==='dark'||savedTheme==='light'){return savedTheme;}// Check system preference\nif(window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches){return'dark';}return'light';});// Apply theme to document root\nuseEffect(()=>{document.documentElement.setAttribute('data-theme',theme);document.body.className=theme;localStorage.setItem('expense-tracker-theme',theme);},[theme]);// Listen for system theme changes\nuseEffect(()=>{const mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');const handleChange=e=>{// Only auto-switch if user hasn't manually set a preference\nconst savedTheme=localStorage.getItem('expense-tracker-theme');if(!savedTheme){setTheme(e.matches?'dark':'light');}};mediaQuery.addEventListener('change',handleChange);return()=>mediaQuery.removeEventListener('change',handleChange);},[]);const toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};const isDarkMode=theme==='dark';const value={theme,toggleTheme,isDarkMode};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","undefined","useTheme","context","Error","ThemeProvider","_ref","children","theme","setTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","document","documentElement","setAttribute","body","className","setItem","mediaQuery","handleChange","e","addEventListener","removeEventListener","toggleTheme","prevTheme","isDarkMode","value","Provider"],"sources":["/Users/srihemanthreddy/expense-tracker-app/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  isDarkMode: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  // Check for saved theme preference or default to light mode\n  const [theme, setTheme] = useState<Theme>(() => {\n    const savedTheme = localStorage.getItem('expense-tracker-theme');\n    if (savedTheme === 'dark' || savedTheme === 'light') {\n      return savedTheme;\n    }\n    \n    // Check system preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    \n    return 'light';\n  });\n\n  // Apply theme to document root\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    document.body.className = theme;\n    localStorage.setItem('expense-tracker-theme', theme);\n  }, [theme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e: MediaQueryListEvent) => {\n      // Only auto-switch if user hasn't manually set a preference\n      const savedTheme = localStorage.getItem('expense-tracker-theme');\n      if (!savedTheme) {\n        setTheme(e.matches ? 'dark' : 'light');\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  const isDarkMode = theme === 'dark';\n\n  const value: ThemeContextType = {\n    theme,\n    toggleTheme,\n    isDarkMode,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAUzF,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAA+BO,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,aAA2C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtE;AACA,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAQ,IAAM,CAC9C,KAAM,CAAAc,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAChE,GAAIF,UAAU,GAAK,MAAM,EAAIA,UAAU,GAAK,OAAO,CAAE,CACnD,MAAO,CAAAA,UAAU,CACnB,CAEA;AACA,GAAIG,MAAM,CAACC,UAAU,EAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAAE,CAClF,MAAO,MAAM,CACf,CAEA,MAAO,OAAO,CAChB,CAAC,CAAC,CAEF;AACAlB,SAAS,CAAC,IAAM,CACdmB,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEV,KAAK,CAAC,CAC1DQ,QAAQ,CAACG,IAAI,CAACC,SAAS,CAAGZ,KAAK,CAC/BG,YAAY,CAACU,OAAO,CAAC,uBAAuB,CAAEb,KAAK,CAAC,CACtD,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX;AACAX,SAAS,CAAC,IAAM,CACd,KAAM,CAAAyB,UAAU,CAAGT,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CACpE,KAAM,CAAAS,YAAY,CAAIC,CAAsB,EAAK,CAC/C;AACA,KAAM,CAAAd,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAChE,GAAI,CAACF,UAAU,CAAE,CACfD,QAAQ,CAACe,CAAC,CAACT,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACxC,CACF,CAAC,CAEDO,UAAU,CAACG,gBAAgB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CACnD,MAAO,IAAMD,UAAU,CAACI,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CACrE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACxBlB,QAAQ,CAACmB,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACjE,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGrB,KAAK,GAAK,MAAM,CAEnC,KAAM,CAAAsB,KAAuB,CAAG,CAC9BtB,KAAK,CACLmB,WAAW,CACXE,UACF,CAAC,CAED,mBACE9B,IAAA,CAACC,YAAY,CAAC+B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAvB,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}