{"ast":null,"code":"var _jsxFileName = \"/Users/srihemanthreddy/expense-tracker-app/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI, tokenManager } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const isAuthenticated = !!user && !!tokenManager.getToken();\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = tokenManager.getToken();\n      if (token) {\n        try {\n          const userData = await authAPI.getProfile();\n          setUser(userData);\n        } catch (error) {\n          tokenManager.clearTokens();\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const authResponse = await authAPI.login(credentials);\n      setUser(authResponse.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      await authAPI.register(userData);\n      // After registration, you might want to automatically log in the user\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    authAPI.logout();\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","tokenManager","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","getToken","initAuth","token","userData","getProfile","error","clearTokens","login","credentials","authResponse","register","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srihemanthreddy/expense-tracker-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, LoginCredentials, RegisterData } from '../types';\nimport { authAPI, tokenManager } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (credentials: LoginCredentials) => Promise<void>;\n  register: (userData: RegisterData) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const isAuthenticated = !!user && !!tokenManager.getToken();\n\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = tokenManager.getToken();\n      if (token) {\n        try {\n          const userData = await authAPI.getProfile();\n          setUser(userData);\n        } catch (error) {\n          tokenManager.clearTokens();\n        }\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (credentials: LoginCredentials) => {\n    try {\n      const authResponse = await authAPI.login(credentials);\n      setUser(authResponse.user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      await authAPI.register(userData);\n      // After registration, you might want to automatically log in the user\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    authAPI.logout();\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    register,\n    logout,\n    isAuthenticated,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAExF,SAASC,OAAO,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWxD,MAAMC,WAAW,gBAAGR,aAAa,CAA8BS,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGX,UAAU,CAACO,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMmB,eAAe,GAAG,CAAC,CAACJ,IAAI,IAAI,CAAC,CAACZ,YAAY,CAACiB,QAAQ,CAAC,CAAC;EAE3DnB,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,KAAK,GAAGnB,YAAY,CAACiB,QAAQ,CAAC,CAAC;MACrC,IAAIE,KAAK,EAAE;QACT,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMrB,OAAO,CAACsB,UAAU,CAAC,CAAC;UAC3CR,OAAO,CAACO,QAAQ,CAAC;QACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdtB,YAAY,CAACuB,WAAW,CAAC,CAAC;QAC5B;MACF;MACAR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDG,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAOC,WAA6B,IAAK;IACrD,IAAI;MACF,MAAMC,YAAY,GAAG,MAAM3B,OAAO,CAACyB,KAAK,CAACC,WAAW,CAAC;MACrDZ,OAAO,CAACa,YAAY,CAACd,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMK,QAAQ,GAAG,MAAOP,QAAsB,IAAK;IACjD,IAAI;MACF,MAAMrB,OAAO,CAAC4B,QAAQ,CAACP,QAAQ,CAAC;MAChC;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnB7B,OAAO,CAAC6B,MAAM,CAAC,CAAC;IAChBf,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMgB,KAAsB,GAAG;IAC7BjB,IAAI;IACJY,KAAK;IACLG,QAAQ;IACRC,MAAM;IACNZ,eAAe;IACfF;EACF,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,GAAA,CA5DWF,YAAyC;AAAA0B,EAAA,GAAzC1B,YAAyC;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}